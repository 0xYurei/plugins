(function(extension,modules,common){"use strict";const transformatorRegex=/([GAD])\: ?["]((?:(?=(\\?))\3.)*?)["] ?\=> ?["]((?:(?=(\\?))\5.)*?)["] ?(?:\((\d+)\))?/gi,SendMessageStore=modules.webpack.findByProps("sendMessage","truncateMessages","patchMessageAttachments"),ref={responses:[]};window.ref=ref;function handleMessageCreate({message:e,channelId:o}={}){if(!e?.author||e.author.id==common.UserStore.getCurrentUser().id)return;const s=ref.responses.find(r=>(r.type=="A"||r.type=="G"&&e.guild_id||r.type=="D"&&!e.guild_id)&&r.matcher.test(e.content));!s||s.rateLimit>Date.now()||(s.rateLimit=Date.now()+s.debounceLimit,SendMessageStore.sendMessage(o,{content:s.response,tts:!1,invalidEmojis:[],validNonShortcutEmojis:[]},void 0,{}))}function loadResponses(val){const responseStr=val||extension.persist.ghost?.settings?.responses;responseStr&&(ref.responses=[...responseStr.matchAll(transformatorRegex)||[]].map((...arr)=>{const[match,type,finderRegex,_,responseStr,__,debounce]=arr?.[0]||arr||[];return!type||!finderRegex||!responseStr?null:{type:type.toLocaleUpperCase(),matcher:new RegExp(finderRegex),debounceLimit:Number(debounce)||1e3,get response(){return eval(`\`${responseStr.replaceAll('\\"','"').replaceAll("`","\\`")}\``)},rateLimit:0}}).filter(e=>e))}let debouncedLoadResponses=_.debounce(loadResponses,3e3);var index={load(){try{loadResponses(),common.FluxDispatcher.subscribe("MESSAGE_CREATE",handleMessageCreate)}catch(e){console.error("[AR Error]",e)}},unload(){ref.responses=[],common.FluxDispatcher.unsubscribe("MESSAGE_CREATE",handleMessageCreate)},settings:{data:[{type:"textarea",name:"Auto Responses",rows:6,property:"responses",description:'Format is: [type]: "Trigger as regex" => "Response as string" (rate limit as milliseconds), type stands for guild(G), dm(D) or all(A).',placeholder:`G: "acord" => "wow"
D: "foo" => "bar"
A: "Hello" => "world." (5000)`,value:""}],update(e,o){switch(e){case"responses":{console.log("31"),debouncedLoadResponses(o);break}}}}};return index})(acord.extension,acord.modules,acord.modules.common);
